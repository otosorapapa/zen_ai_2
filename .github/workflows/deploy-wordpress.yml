name: Deploy WordPress Plugin

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: '20'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies and build
        env:
          VITE_BASE_PATH: ./
        run: |
          npm ci
          npm run build

      - name: Guard dist output
        run: |
          test -f dist/index.html || (echo "dist/index.html not found" && exit 1)
          test -f dist/manifest.json || (echo "dist/manifest.json not found" && exit 1)

      - name: Assemble WordPress plugin bundle
        run: |
          rm -rf wordpress-plugin
          mkdir -p wordpress-plugin
          cp -R deliverables/wp-plugin/. wordpress-plugin/
          rsync -av --delete dist/ wordpress-plugin/dist/

      - name: Install sshpass
        run: sudo apt-get update -y && sudo apt-get install -y sshpass

      - name: Prepare remote directory
        env:
          WP_HOST: ${{ secrets.WP_HOST }}
          WP_USER: ${{ secrets.WP_USER }}
          WP_SSH_PASS: ${{ secrets.WP_SSH_PASS }}
          WP_REMOTE_PATH: ${{ secrets.WP_REMOTE_PATH }}
          WP_SSH_PORT: ${{ secrets.WP_SSH_PORT || '22' }}
        run: |
          PASS_CLEAN=$(printf '%s' "$WP_SSH_PASS" | tr -d '\r\n')
          HOST_CLEAN=$(printf '%s' "$WP_HOST" | tr -d '\r\n')
          USER_CLEAN=$(printf '%s' "$WP_USER" | tr -d '\r\n')
          PORT_CLEAN=$(printf '%s' "$WP_SSH_PORT" | tr -d '\r\n')
          REMOTE_PATH_CLEAN=$(printf '%s' "$WP_REMOTE_PATH" | tr -d '\r\n')
          sshpass -p "$PASS_CLEAN" ssh -p "$PORT_CLEAN" -o StrictHostKeyChecking=no "$USER_CLEAN@$HOST_CLEAN" "
            mkdir -p \"$REMOTE_PATH_CLEAN\" &&
            chmod 755 \"$REMOTE_PATH_CLEAN\"
          "

      - name: Rsync deploy
        env:
          WP_HOST: ${{ secrets.WP_HOST }}
          WP_USER: ${{ secrets.WP_USER }}
          WP_SSH_PASS: ${{ secrets.WP_SSH_PASS }}
          WP_REMOTE_PATH: ${{ secrets.WP_REMOTE_PATH }}
          WP_SSH_PORT: ${{ secrets.WP_SSH_PORT || '22' }}
        run: |
          PASS_CLEAN=$(printf '%s' "$WP_SSH_PASS" | tr -d '\r\n')
          HOST_CLEAN=$(printf '%s' "$WP_HOST" | tr -d '\r\n')
          USER_CLEAN=$(printf '%s' "$WP_USER" | tr -d '\r\n')
          PORT_CLEAN=$(printf '%s' "$WP_SSH_PORT" | tr -d '\r\n')
          REMOTE_PATH_CLEAN=$(printf '%s' "$WP_REMOTE_PATH" | tr -d '\r\n')
          sshpass -p "$PASS_CLEAN" rsync -avz --delete \
            -e "ssh -p $PORT_CLEAN -o StrictHostKeyChecking=no" \
            wordpress-plugin/ "$USER_CLEAN@$HOST_CLEAN:$REMOTE_PATH_CLEAN/"

      - name: Show remote listing
        env:
          WP_HOST: ${{ secrets.WP_HOST }}
          WP_USER: ${{ secrets.WP_USER }}
          WP_SSH_PASS: ${{ secrets.WP_SSH_PASS }}
          WP_REMOTE_PATH: ${{ secrets.WP_REMOTE_PATH }}
          WP_SSH_PORT: ${{ secrets.WP_SSH_PORT || '22' }}
        run: |
          PASS_CLEAN=$(printf '%s' "$WP_SSH_PASS" | tr -d '\r\n')
          HOST_CLEAN=$(printf '%s' "$WP_HOST" | tr -d '\r\n')
          USER_CLEAN=$(printf '%s' "$WP_USER" | tr -d '\r\n')
          PORT_CLEAN=$(printf '%s' "$WP_SSH_PORT" | tr -d '\r\n')
          REMOTE_PATH_CLEAN=$(printf '%s' "$WP_REMOTE_PATH" | tr -d '\r\n')
          sshpass -p "$PASS_CLEAN" ssh -p "$PORT_CLEAN" -o StrictHostKeyChecking=no "$USER_CLEAN@$HOST_CLEAN" "
            ls -la \"$REMOTE_PATH_CLEAN\" &&
            echo '== dist ==' &&
            ls -la \"$REMOTE_PATH_CLEAN/dist\" || true &&
            echo '== assets ==' &&
            ls -la \"$REMOTE_PATH_CLEAN/dist/assets\" || true
          "
